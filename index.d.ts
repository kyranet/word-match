/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export enum Boundary {
	/** The start of a new word. */
	Start = 0,
	/** The contents of a word. */
	Word = 1,
	/** The end of a word. */
	End = 2,
	/** A single character that is both the start and the end of a word. */
	Mixed = 3,
	/**
	 * A non-word character, which can be skipped, such as punctuation, spaces,
	 * or newlines.
	 */
	NoContent = 4
}
export class Sentence {
	/**
	 * A vector of booleans that represent whether the character at the same
	 * index has been checked by a `Word`.
	 */
	checked: Array<boolean>;
	/**
	 * A vector of `Boundary` that represent the boundaries of the words in the
	 * sentence.
	 */
	boundaries: Array<Boundary>;
	constructor(sentence: string);
	get length(): number;
	toString(): string;
}
export class Word {
	constructor(word: string);
	matches(sentence: string): WordMatch | null;
	toString(): string;
}
export class WordMatch {
	get start(): number;
	get end(): number;
}
